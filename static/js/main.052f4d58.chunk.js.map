{"version":3,"sources":["contexts/theme-context.js","components/AddTaskPanel.jsx","components/ThemeCheckbox.jsx","components/Card.jsx","components/CardsBoard.jsx","components/App.jsx","index.js"],"names":["themes","light","appBg","textColor","inputColor","addBtnColor","cardBgGreen","cardBgRed","delBtnColor","delBtnTextColor","dark","ThemeContext","React","createContext","AddTaskPanel","addCard","theme","useContext","useState","value","setValue","className","onSubmit","event","preventDefault","onChange","target","type","placeholder","style","backgroundColor","color","ThemeCheckbox","changeTheme","id","htmlFor","Card","date","card","index","markCard","deleteCard","onClick","isDone","text","evt","stopPropagation","Date","timestamp","toLocaleDateString","slice","toLocaleTimeString","CardsBoard","cards","map","App","setTheme","localStorage","getItem","JSON","parse","uuidv4","setCards","useEffect","setItem","stringify","Provider","item","i","newCards","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.052f4d58.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const themes = {\r\n  light: {\r\n    appBg: '#DDDDDD',\r\n    textColor: '#FFFFFF',\r\n    inputColor: '#AAAAAA',\r\n    addBtnColor: '#40D1FF',\r\n    cardBgGreen: '#59BA50',\r\n    cardBgRed: '#BA5050',\r\n    delBtnColor: 'rgba(196, 196, 196, 0.5)',\r\n    delBtnTextColor: '#FFFFFF',\r\n  },\r\n  dark: {\r\n    appBg: '#333333',\r\n    textColor: '#DDDDDD',\r\n    inputColor: '#555555',\r\n    addBtnColor: '#265766',\r\n    cardBgGreen: '#2D4A2A',\r\n    cardBgRed: '#552828',\r\n    delBtnColor: 'rgba(37, 37, 37, 0.5)',\r\n    delBtnTextColor: 'rgba(221, 221, 221, 0.5)',\r\n  },\r\n};\r\n\r\nexport const ThemeContext = React.createContext();","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/theme-context';\r\n\r\nexport function AddTaskPanel({ addCard }) {\r\n  const theme = useContext(ThemeContext);\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    if (!value) { }\r\n    else {\r\n      addCard(value);\r\n      setValue(\"\");\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <form className='add-card' onSubmit={handleSubmit}>\r\n      <input className='add-card__input-field' value={value} onChange={handleChange} type='text' placeholder='enter new task...' style={{ backgroundColor: theme.inputColor, color: theme.textColor }} />\r\n      <input className='add-card__btn' type=\"submit\" value=\"+\" style={{ backgroundColor: theme.addBtnColor, color: theme.textColor }} />\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport function ThemeCheckbox({ changeTheme }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"themeCheckbox\" >\r\n        <input className=\"check\" type=\"checkbox\" id=\"newchec\" onChange={() => { changeTheme() }} />\r\n        <label htmlFor=\"newchec\"></label>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/theme-context';\r\n\r\nexport function Card({ card, index, markCard, deleteCard }) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const getDateString = (date) => {\r\n    return `${date.toLocaleDateString().slice(0, 5)}\\u00A0\\u00A0${date.toLocaleTimeString().slice(0,5)}`;\r\n  };\r\n\r\n  return (\r\n    <div className='card' onClick={() => { markCard(index) }} style={{ backgroundColor: card.isDone ? theme.cardBgGreen : theme.cardBgRed }}>\r\n      <div className='card__text' style={{ color: theme.textColor }}>{card.text}</div>\r\n      <div className='card__delete-btn' onClick={(evt) => { evt.stopPropagation(); deleteCard(index) }} style={{ backgroundColor: theme.delBtnColor, color: theme.delBtnTextColor }}>+</div>\r\n      <div className='card__status' style={{ color: theme.textColor }}>{card.isDone ? 'completed' : 'not completed'}</div>\r\n      <div className=\"card_timestamp\" style={{ color: theme.textColor }}> {getDateString(new Date(card.timestamp))}</div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Card } from './Card';\r\n\r\nexport function CardsBoard({ cards, markCard, deleteCard }) {\r\n  return (\r\n    <div className='container'>\r\n      <div className='cards'>\r\n        {cards.map((card, index) =>\r\n          <Card key={card.id} card={card}\r\n            index={index}\r\n            markCard={markCard}\r\n            deleteCard={deleteCard} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { themes } from '../contexts/theme-context.js';\r\nimport { ThemeContext } from '../contexts/theme-context.js';\r\nimport { AddTaskPanel } from './AddTaskPanel';\r\nimport { ThemeCheckbox } from './ThemeCheckbox';\r\nimport { CardsBoard } from './CardsBoard';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function App() {\r\n  const [theme, setTheme] = useState(themes.light);\r\n  const [cards, setCards] = useState(\r\n    (localStorage.getItem('todos')) ? JSON.parse(localStorage.getItem('todos')) : [\r\n      {\r\n        id: uuidv4(),\r\n        text: \"This is a simple todo\",\r\n        isDone: false,\r\n        timestamp: new Date(),\r\n      }\r\n    ]\r\n  );\r\n\r\n  const changeTheme = () => {\r\n    setTheme(theme === themes.dark\r\n      ? themes.light\r\n      : themes.dark);\r\n  };\r\n\r\n  const addCard = text => {\r\n    setCards([...cards, { id: uuidv4(), text: text, isDone: false, timestamp: new Date() }]);\r\n  };\r\n\r\n  const markCard = index => {\r\n    setCards(cards.map((item, i) => {\r\n      if (i === index) item.isDone = !item.isDone;\r\n      return item;\r\n    }))\r\n  };\r\n\r\n  const deleteCard = index => {\r\n    const newCards = [...cards];\r\n    newCards.splice(index, 1);\r\n    setCards(newCards);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(cards));\r\n  });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={theme} >\r\n      <div className='app' style={{ backgroundColor: theme.appBg }}>\r\n        <ThemeCheckbox changeTheme={changeTheme} />\r\n        <AddTaskPanel addCard={addCard} />\r\n        <CardsBoard cards={cards} markCard={markCard} deleteCard={deleteCard} />\r\n      </div>\r\n    </ThemeContext.Provider>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './index.css';\r\nimport { App } from './components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}