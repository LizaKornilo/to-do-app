{"version":3,"sources":["contexts/theme-context.js","components/AddTaskPanel.jsx","components/ThemeCheckbox.jsx","components/Popup/Popup.jsx","utils/dateFormatter.js","components/EditCardForm/EditCardForm.jsx","components/Card.jsx","components/CardsBoard.jsx","models/ToDoItem.js","components/App.jsx","index.js"],"names":["themes","light","appBg","textColor","inputColor","addBtnColor","cardBgGreen","cardBgRed","delBtnColor","delBtnTextColor","dark","ThemeContext","React","createContext","AddTaskPanel","addCard","theme","useContext","useState","value","setValue","className","onSubmit","event","preventDefault","onChange","target","type","placeholder","style","backgroundColor","color","ThemeCheckbox","changeTheme","id","htmlFor","Popup","trigger","setTrigger","children","onClick","getDateString","date","getDate","getMonth","getHours","getMinutes","EditCardForm","card","updateOpenCard","newCard","setNewCard","handleInputChange","checked","name","onKeyPress","key","required","isDone","Date","timestamp","Card","index","updateCard","deleteCard","popupIsOpen","setPopupIsOpen","evt","stopPropagation","CardsBoard","cards","map","ToDoItem","isChecked","uid","this","uuid","firstItem","App","setTheme","localStorage","getItem","JSON","parse","setCards","useEffect","setItem","stringify","Provider","item","i","newCards","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc516dba.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const themes = {\n  light: {\n    appBg: '#DDDDDD',\n    textColor: '#FFFFFF',\n    inputColor: '#AAAAAA',\n    addBtnColor: '#40D1FF',\n    cardBgGreen: '#59BA50',\n    cardBgRed: '#BA5050',\n    delBtnColor: 'rgba(196, 196, 196, 0.5)',\n    delBtnTextColor: '#FFFFFF',\n  },\n  dark: {\n    appBg: '#333333',\n    textColor: '#DDDDDD',\n    inputColor: '#555555',\n    addBtnColor: '#265766',\n    cardBgGreen: '#2D4A2A',\n    cardBgRed: '#552828',\n    delBtnColor: 'rgba(37, 37, 37, 0.5)',\n    delBtnTextColor: 'rgba(221, 221, 221, 0.5)',\n  },\n};\n\nexport const ThemeContext = React.createContext();","import React, { useContext } from 'react';\nimport { ThemeContext } from '../contexts/theme-context';\n\nexport function AddTaskPanel({ addCard }) {\n  const theme = useContext(ThemeContext);\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  }\n\n  const handleSubmit = event => {\n    if (!value) { }\n    else {\n      addCard(value);\n      setValue(\"\");\n    }\n    event.preventDefault();\n  }\n\n  return (\n    <form className='add-card' onSubmit={handleSubmit}>\n      <input className='add-card__input-field' value={value} onChange={handleChange} type='text' placeholder='enter new task...' style={{ backgroundColor: theme.inputColor, color: theme.textColor }} />\n      <input className='add-card__btn' type=\"submit\" value=\"+\" style={{ backgroundColor: theme.addBtnColor, color: theme.textColor }} />\n    </form>\n  );\n}","import React from 'react';\n\nexport function ThemeCheckbox({ changeTheme }) {\n  return (\n    <div className=\"container\">\n      <div className=\"themeCheckbox\" >\n        <input className=\"check\" type=\"checkbox\" id=\"newchec\" onChange={() => { changeTheme() }} />\n        <label htmlFor=\"newchec\"></label>\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport \"./popup.css\";\n\nfunction Popup({ trigger, setTrigger, children }) {\n  return trigger ? (\n    <div className=\"overlay\">\n      <div className=\"popup\">\n        <button className=\"popup__close-btn\" onClick={() => setTrigger(false)}>+</button>\n        {children}\n      </div>\n    </div>\n  ) : \"\";\n}\n\nexport default Popup;","export const getDateString = (date) => {\n  return `${date.getDate()}.${date.getMonth() + 1}\\u00A0\\u00A0${date.getHours()}:${date.getMinutes()}`;\n};\n","import React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { getDateString } from \"../../utils/dateFormatter\";\nimport './editCardForm.css'\n\nfunction EditCardForm({ setTrigger, card, updateOpenCard }) {\n  const [newCard, setNewCard] = useState({ ...card });\n\n  const handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    setNewCard({ ...newCard, [name]: value });\n  }\n\n  const handleSubmit = event => {\n    updateOpenCard(newCard);\n    setTrigger(false);\n    event.preventDefault();\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <form className=\"edit-card-form\" onSubmit={handleSubmit}>\n      <TextareaAutosize onKeyPress={handleKeyPress} className='form__card-name' value={newCard.name} name=\"name\" onChange={handleInputChange} type='text' placeholder='enter task name...' required />\n      <div className=\"form__is-done\" >\n        <input className=\"is-done\" type=\"checkbox\" id=\"ch\" checked={newCard.isDone} name=\"isDone\" onChange={handleInputChange} />\n        <label htmlFor=\"ch\">is completed</label>\n      </div>\n      <div className=\"form__timestamp\">{getDateString(new Date(card.timestamp))} </div>\n      <input className='form__submit-btn' type=\"submit\" value=\"ok\" />\n    </form>\n  );\n}\n\nexport default EditCardForm;","import React, { useState, useContext } from 'react';\nimport { ThemeContext } from '../contexts/theme-context';\nimport Popup from './Popup/Popup';\nimport { getDateString } from '../utils/dateFormatter.js';\nimport EditCardForm from './EditCardForm/EditCardForm';\n\nexport function Card({ card, index, updateCard, deleteCard }) {\n  const theme = useContext(ThemeContext);\n\n  const [popupIsOpen, setPopupIsOpen] = useState(false);\n  const updateOpenCard = (newCard) => {\n    updateCard(index, newCard);\n  }\n\n  return (\n    <>\n      <div className='card' onClick={() => { setPopupIsOpen(true) }} style={{ backgroundColor: card.isDone ? theme.cardBgGreen : theme.cardBgRed }}>\n        <div className='card__text' style={{ color: theme.textColor }}>{card.name}</div>\n        <div className='card__delete-btn' onClick={(evt) => { evt.stopPropagation(); deleteCard(index) }} style={{ backgroundColor: theme.delBtnColor, color: theme.delBtnTextColor }}>+</div>\n        <div className='card__status' style={{ color: theme.textColor }}>{card.isDone ? 'completed' : 'not completed'}</div>\n        <div className=\"card_timestamp\" style={{ color: theme.textColor }}> {(getDateString(new Date(card.timestamp)))}</div>\n      </div>\n\n      <Popup trigger={popupIsOpen} setTrigger={setPopupIsOpen} >\n        <EditCardForm setTrigger={setPopupIsOpen} card={card} updateOpenCard={updateOpenCard} />\n      </Popup>\n    </>\n  );\n}","import React from 'react';\nimport { Card } from './Card';\n\nexport function CardsBoard({ cards, updateCard, deleteCard }) {\n  return (\n    <div className='container'>\n      <div className='cards'>\n        {cards.map((card, index) =>\n          <Card key={card.id} card={card}\n            index={index}\n            updateCard={updateCard}\n            deleteCard={deleteCard}/>\n        )}\n      </div>\n    </div>\n  );\n}","import { v4 as uuid } from 'uuid';\n\nexport default function ToDoItem(isChecked, name, uid) {\n  this.uid = uid && uuid();\n  this.name = name;\n  this.isChecked = isChecked;\n  this.timestamp = new Date();\n}","import React, { useState, useEffect } from 'react';\nimport { themes } from '../contexts/theme-context.js';\nimport { ThemeContext } from '../contexts/theme-context.js';\nimport { AddTaskPanel } from './AddTaskPanel';\nimport { ThemeCheckbox } from './ThemeCheckbox';\nimport { CardsBoard } from './CardsBoard';\nimport ToDoItem from '../models/ToDoItem.js';\n\nconst firstItem = new ToDoItem(false, \"This is a simple todo\")\n\nexport function App() {\n\n\n  const [theme, setTheme] = useState(themes.light);\n  const [cards, setCards] = useState(\n    (localStorage.getItem('todos')) ? JSON.parse(localStorage.getItem('todos')) : [firstItem]\n  );\n\n  const changeTheme = () => {\n    setTheme(theme === themes.dark\n      ? themes.light\n      : themes.dark);\n  };\n\n  const addCard = name => {\n    setCards([...cards, new ToDoItem(false, name)]);\n  };\n\n  const deleteCard = index => {\n    const newCards = [...cards];\n    newCards.splice(index, 1);\n    setCards(newCards);\n  };\n\n  const updateCard = (index, newCard) => {\n    setCards(cards.map((item, i) => {\n      if (i === index) { return newCard; }\n      return item;\n    }))\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(cards));\n  }, [cards]);\n\n  return (\n    <ThemeContext.Provider value={theme} >\n      <div className='app' style={{ backgroundColor: theme.appBg }}>\n        <ThemeCheckbox changeTheme={changeTheme} />\n        <AddTaskPanel addCard={addCard} />\n        <CardsBoard cards={cards} updateCard={updateCard} deleteCard={deleteCard} />\n      </div>\n    </ThemeContext.Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}